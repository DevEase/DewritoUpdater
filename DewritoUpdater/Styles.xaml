<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit">
    <!-- Fill Brushes -->

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0" />
                <GradientStop Color="#CCC" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0" />
                <GradientStop Color="#CCC" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0" />
                <GradientStop Color="#EEE" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0" />
                <GradientStop Color="#EEE" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0" />
                <GradientStop Color="#AAA" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0" />
                <GradientStop Color="#EEE" Offset="0.1" />
                <GradientStop Color="#EEE" Offset="0.9" />
                <GradientStop Color="#FFF" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <!-- Border Brushes -->

    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0" />
                <GradientStop Color="#444" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0" />
                <GradientStop Color="#444" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777" Offset="0.0" />
                <GradientStop Color="#000" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0" />
                <GradientStop Color="#888" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

    <!-- Miscellaneous Brushes -->
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Panel" Margin="-2,0,0,0">
                        <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="20,10" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Panel" Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="Spinner" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="12" />
        <Setter Property="Image.RenderTransform">
            <Setter.Value>
                <RotateTransform CenterX="6" CenterY="6" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="RenderTransform.Angle"
                                From="0"
                                To="360"
                                Duration="0:0:5"
                                RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Hover" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White" />
        <Setter Property="FontFamily" Value="/DoritoUpdater;component/Resources/#Aero Matics" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <!--
                        <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Black" />
                                <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HoverTab" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White" />
        <Setter Property="FontFamily" Value="/DoritoUpdater;component/Resources/#Aero Matics" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="#57FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <!--
                        <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Black" />
                                <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HoverClose" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#59FF0000" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HoverMinimize" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#590080FF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"
                                   Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" Width="Auto" Height="Auto"
                                Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollBars-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#8C8C8C" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}"
                                       Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0"
                                              Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0"
                                              Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb"
                                    Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                BorderBrush="White"
                BorderThickness="1">
                <Border.Background>
                    <SolidColorBrush Color="White" Opacity="0.07" />
                </Border.Background>
            </Border>
            <Border
                Grid.Column="0"
                Margin="1"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0,0,1,0" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                Fill="White"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="White" />
                <Setter TargetName="Arrow" Property="Fill" Value="Black" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="White" />
                <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                <Setter TargetName="Arrow" Property="Fill" Value="Black" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="White" />
                <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                <Setter TargetName="Arrow" Property="Fill" Value="White" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            x:Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press" />
                        <ContentPresenter
                            x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Background="Transparent"
                                 Foreground="White"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup
                            x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid
                                x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Opacity="1"
                                        BorderThickness="1"
                                        BorderBrush="#FF47A6FF" >
                                    <Border.Background>
                                        <SolidColorBrush Color="#FF20304A" Opacity="0.8"/>
                                    </Border.Background>
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ColorPickerControlTemplate" TargetType="{x:Type xctk:ColorPicker}">
        <Grid UseLayoutRounding="True">

            <ToggleButton x:Name="PART_ColorPickerToggleButton" BorderBrush="White" BorderThickness="1"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="True"
                          IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          MinHeight="22" UseLayoutRounding="True"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                <ToggleButton.Background>
                    <SolidColorBrush Color="#11FFFFFF" />
                </ToggleButton.Background>
                <ToggleButton.Foreground>
                    <SolidColorBrush Color="White" />
                </ToggleButton.Foreground>
                <ToggleButton.IsHitTestVisible>
                    <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <xctk:InverseBoolConverter />
                        </Binding.Converter>
                    </Binding>
                </ToggleButton.IsHitTestVisible>

                <Grid Margin="2" UseLayoutRounding="True">
                    <ContentControl x:Name="ColorOnly" UseLayoutRounding="True">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Border UseLayoutRounding="True">
                                                <Border.Background>
                                                    <DrawingBrush TileMode="Tile" Viewport="0,0,10,10"
                                                                  ViewportUnits="Absolute">
                                                        <DrawingBrush.Drawing>
                                                            <DrawingGroup>
                                                                <GeometryDrawing Brush="White">
                                                                    <GeometryDrawing.Geometry>
                                                                        <RectangleGeometry Rect="0,0,100,100" />
                                                                    </GeometryDrawing.Geometry>
                                                                </GeometryDrawing>
                                                                <GeometryDrawing Brush="LightGray">
                                                                    <GeometryDrawing.Geometry>
                                                                        <GeometryGroup>
                                                                            <RectangleGeometry Rect="0,0,50,50" />
                                                                            <RectangleGeometry Rect="50,50,50,50" />
                                                                        </GeometryGroup>
                                                                    </GeometryDrawing.Geometry>
                                                                </GeometryDrawing>
                                                            </DrawingGroup>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Border.Background>
                                                <Rectangle UseLayoutRounding="True">
                                                    <Rectangle.Fill>
                                                        <Binding Path="SelectedColor"
                                                                 RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                            <Binding.Converter>
                                                                <xctk:ColorToSolidColorBrushConverter />
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Border>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <Border x:Name="ColorAndName" UseLayoutRounding="True" Visibility="Hidden">
                        <StackPanel Orientation="Horizontal" UseLayoutRounding="True">
                            <ContentControl BorderBrush="White" BorderThickness="1" HorizontalAlignment="Left"
                                            Margin="2,1,4,1" UseLayoutRounding="True" Width="20">
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Border UseLayoutRounding="True">
                                                        <Border.Background>
                                                            <DrawingBrush TileMode="Tile" Viewport="0,0,10,10"
                                                                          ViewportUnits="Absolute">
                                                                <DrawingBrush.Drawing>
                                                                    <DrawingGroup>
                                                                        <GeometryDrawing Brush="White">
                                                                            <GeometryDrawing.Geometry>
                                                                                <RectangleGeometry Rect="0,0,100,100" />
                                                                            </GeometryDrawing.Geometry>
                                                                        </GeometryDrawing>
                                                                        <GeometryDrawing Brush="LightGray">
                                                                            <GeometryDrawing.Geometry>
                                                                                <GeometryGroup>
                                                                                    <RectangleGeometry Rect="0,0,50,50" />
                                                                                    <RectangleGeometry
                                                                                        Rect="50,50,50,50" />
                                                                                </GeometryGroup>
                                                                            </GeometryDrawing.Geometry>
                                                                        </GeometryDrawing>
                                                                    </DrawingGroup>
                                                                </DrawingBrush.Drawing>
                                                            </DrawingBrush>
                                                        </Border.Background>
                                                        <Rectangle UseLayoutRounding="True">
                                                            <Rectangle.Fill>
                                                                <Binding Path="SelectedColor"
                                                                         RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                    <Binding.Converter>
                                                                        <xctk:ColorToSolidColorBrushConverter />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                    </Border>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                            <TextBlock 
                                       Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}"
                                       UseLayoutRounding="True" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                </Grid>
            </ToggleButton>
            <Popup x:Name="PART_ColorPickerPalettePopup" AllowsTransparency="True" Focusable="False"
                   HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_ColorPickerToggleButton}"
                   PopupAnimation="Slide" StaysOpen="False" VerticalOffset="1" VerticalAlignment="Bottom">
                <Border BorderBrush="#FF47A6FF" BorderThickness="1" Padding="0" UseLayoutRounding="True">
                    <Grid UseLayoutRounding="True" Height="260">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid x:Name="_colorPaletteHost" Margin="4" UseLayoutRounding="True" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="1" UseLayoutRounding="True">
                                <Grid.Visibility>
                                    <TemplateBinding Property="ShowAvailableColors" />
                                </Grid.Visibility>
                                <Grid UseLayoutRounding="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <TextBlock Background="White" Foreground="White" Margin="0,0,0,1" Padding="2"
                                               Text="{TemplateBinding AvailableColorsHeader}" UseLayoutRounding="True" />
                                    <ListBox x:Name="PART_AvailableColors" Grid.Row="1" UseLayoutRounding="True" Foreground="White" BorderBrush="White">
                                        <ListBox.Style>
                                            <Style TargetType="{x:Type ListBox}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="ItemsPanel">
                                                    <Setter.Value>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel IsItemsHost="True" UseLayoutRounding="True" Width="200"/>
                                                        </ItemsPanelTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemContainerStyle">
                                                    <Setter.Value>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Grid ToolTip="{Binding Name}" UseLayoutRounding="True">
                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center"/>
                                                                            <Border x:Name="_outerBorder" BorderBrush="White" BorderThickness="1" Background="White" HorizontalAlignment="Stretch" UseLayoutRounding="True" VerticalAlignment="Stretch">
                                                                                <Border x:Name="_innerBorder" BorderBrush="White" BorderThickness="1" Background="White" HorizontalAlignment="Stretch" UseLayoutRounding="True" VerticalAlignment="Stretch"/>
                                                                            </Border>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                <Setter Property="Background" Value="White" />
                                                                                <Setter Property="Foreground" Value="Black" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsSelected" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <Grid UseLayoutRounding="True">
                                                                <Border BorderBrush="White" BorderThickness="1" Margin="2" UseLayoutRounding="True">
                                                                    <Border.Background>
                                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                            <DrawingBrush.Drawing>
                                                                                <DrawingGroup>
                                                                                    <GeometryDrawing Brush="White">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                    <GeometryDrawing Brush="LightGray">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <GeometryGroup>
                                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                                            </GeometryGroup>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                </DrawingGroup>
                                                                            </DrawingBrush.Drawing>
                                                                        </DrawingBrush>
                                                                    </Border.Background>
                                                                    <Rectangle Height="14" UseLayoutRounding="True" Width="14" Fill="Black">
                                                                        <Rectangle.Style>
                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                <Setter Property="Fill">
                                                                                    <Setter.Value>
                                                                                        <Binding Path="Color">
                                                                                            <Binding.Converter>
                                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Rectangle.Style>
                                                                    </Rectangle>
                                                                </Border>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="SelectionMode" Value="Single"/>
                                            </Style>
                                        </ListBox.Style>
                                    </ListBox>
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="2" UseLayoutRounding="True">
                                <Grid.Visibility>
                                    <TemplateBinding Property="ShowStandardColors" />
                                </Grid.Visibility>
                                <Grid UseLayoutRounding="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Background="White" Foreground="White" Margin="0,1" Padding="2"
                                               Text="{TemplateBinding StandardColorsHeader}" UseLayoutRounding="True" />
                                    <ListBox x:Name="PART_StandardColors" Grid.Row="1" UseLayoutRounding="True" Foreground="White">
                                        <ListBox.Style>
                                            <Style TargetType="{x:Type ListBox}">
                                                <Setter Property="Background" Value="White"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="ItemsPanel">
                                                    <Setter.Value>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel IsItemsHost="True" UseLayoutRounding="True" Width="200"/>
                                                        </ItemsPanelTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemContainerStyle">
                                                    <Setter.Value>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Grid ToolTip="{Binding Name}" UseLayoutRounding="True">
                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center"/>
                                                                            <Border x:Name="_outerBorder" BorderBrush="White" BorderThickness="1" Background="White" HorizontalAlignment="Stretch" UseLayoutRounding="True" VerticalAlignment="Stretch">
                                                                                <Border x:Name="_innerBorder" BorderBrush="White" BorderThickness="1" Background="White" HorizontalAlignment="Stretch" UseLayoutRounding="True" VerticalAlignment="Stretch"/>
                                                                            </Border>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                <Setter Property="Background" Value="White" />
                                                                                <Setter Property="Foreground" Value="Black" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsSelected" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <Grid UseLayoutRounding="True">
                                                                <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" BorderThickness="1" Margin="2" UseLayoutRounding="True">
                                                                    <Border.Background>
                                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                            <DrawingBrush.Drawing>
                                                                                <DrawingGroup>
                                                                                    <GeometryDrawing Brush="White">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                    <GeometryDrawing Brush="LightGray">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <GeometryGroup>
                                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                                            </GeometryGroup>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                </DrawingGroup>
                                                                            </DrawingBrush.Drawing>
                                                                        </DrawingBrush>
                                                                    </Border.Background>
                                                                    <Rectangle Height="14" UseLayoutRounding="True" Width="14">
                                                                        <Rectangle.Style>
                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                <Setter Property="Fill">
                                                                                    <Setter.Value>
                                                                                        <Binding Path="Color">
                                                                                            <Binding.Converter>
                                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Rectangle.Style>
                                                                    </Rectangle>
                                                                </Border>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="SelectionMode" Value="Single"/>
                                            </Style>
                                        </ListBox.Style>
                                    </ListBox>
                                </Grid>
                            </Grid>
                            <Grid Margin="0,1" Grid.Row="3" UseLayoutRounding="True">
                                <Grid.Visibility>
                                    <TemplateBinding Property="ShowRecentColors" />
                                </Grid.Visibility>
                                <Grid UseLayoutRounding="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Background="White" Foreground="White" Margin="0,1" Padding="2"
                                               Text="{TemplateBinding RecentColorsHeader}" UseLayoutRounding="True" />
                                    <ListBox x:Name="PART_RecentColors" Grid.Row="1" UseLayoutRounding="True" Foreground="White">
                                        <ListBox.Style>
                                            <Style TargetType="{x:Type ListBox}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="ItemsPanel">
                                                    <Setter.Value>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel IsItemsHost="True" UseLayoutRounding="True" Width="200"/>
                                                        </ItemsPanelTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemContainerStyle">
                                                    <Setter.Value>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Grid ToolTip="{Binding Name}" UseLayoutRounding="True">
                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center"/>
                                                                            <Border x:Name="_outerBorder" BorderBrush="White" BorderThickness="1" Background="White" HorizontalAlignment="Stretch" UseLayoutRounding="True" VerticalAlignment="Stretch">
                                                                                <Border x:Name="_innerBorder" BorderBrush="White" BorderThickness="1" Background="White" HorizontalAlignment="Stretch" UseLayoutRounding="True" VerticalAlignment="Stretch"/>
                                                                            </Border>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                <Setter Property="Background" Value="White" />
                                                                                <Setter Property="Foreground" Value="Black" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsSelected" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <Grid UseLayoutRounding="True">
                                                                <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" BorderThickness="1" Margin="2" UseLayoutRounding="True">
                                                                    <Border.Background>
                                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                            <DrawingBrush.Drawing>
                                                                                <DrawingGroup>
                                                                                    <GeometryDrawing Brush="White">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                    <GeometryDrawing Brush="LightGray">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <GeometryGroup>
                                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                                            </GeometryGroup>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                </DrawingGroup>
                                                                            </DrawingBrush.Drawing>
                                                                        </DrawingBrush>
                                                                    </Border.Background>
                                                                    <Rectangle Height="14" UseLayoutRounding="True" Width="14">
                                                                        <Rectangle.Style>
                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                <Setter Property="Fill">
                                                                                    <Setter.Value>
                                                                                        <Binding Path="Color">
                                                                                            <Binding.Converter>
                                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Rectangle.Style>
                                                                    </Rectangle>
                                                                </Border>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="SelectionMode" Value="Single"/>
                                            </Style>
                                        </ListBox.Style>
                                    </ListBox>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Grid x:Name="_colorCanvasHost" UseLayoutRounding="True" Visibility="Collapsed">
                            <xctk:ColorCanvas BorderThickness="0"
                                              SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}"
                                              UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}"
                                              UseLayoutRounding="True"
                                              Height="260">
                                <xctk:ColorCanvas.Background>
                                    <SolidColorBrush Color="#FF20304A" Opacity="0.8" />
                                </xctk:ColorCanvas.Background>
                                <xctk:ColorCanvas.Foreground>
                                    <SolidColorBrush Color="White" />
                                </xctk:ColorCanvas.Foreground>
                            </xctk:ColorCanvas>
                        </Grid>
                        <Button x:Name="PART_ColorModeButton" Margin="5" Grid.Row="2" UseLayoutRounding="True"
                                Visibility="Hidden" />
                    </Grid>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="PART_ColorPickerToggleButton" Value="White" />
                <Setter Property="Foreground" TargetName="PART_ColorPickerToggleButton" Value="Black" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" TargetName="PART_ColorPickerToggleButton" Value="#11FFFFFF" />
                <Setter Property="Foreground" TargetName="PART_ColorPickerToggleButton" Value="White" />
            </Trigger>
            <Trigger Property="DisplayColorAndName" Value="True">
                <Setter Property="Visibility" TargetName="ColorOnly" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="ColorAndName" Value="Visible" />
            </Trigger>
            <Trigger Property="ColorMode" Value="ColorPalette">
                <Setter Property="Visibility" TargetName="_colorPaletteHost" Value="Visible" />
                <Setter Property="Visibility" TargetName="_colorCanvasHost" Value="Hidden" />
                <Setter Property="Content" TargetName="PART_ColorModeButton" Value="Advanced" />
            </Trigger>
            <Trigger Property="ColorMode" Value="ColorCanvas">
                <Setter Property="Visibility" TargetName="_colorPaletteHost" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="_colorCanvasHost" Value="Visible" />
                <Setter Property="Content" TargetName="PART_ColorModeButton" Value="Standard" />
            </Trigger>
            <Trigger Property="ShowDropDownButton" Value="False">
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CheckBoxControlTemplate1" TargetType="{x:Type CheckBox}">
        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid x:Name="markGrid">
                    <Path x:Name="optionMark"
                          Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
                          Fill="White" Margin="1" Opacity="0" Stretch="None" />
                    <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0" />
                </Grid>
            </Border>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}" Grid.Column="1"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="True">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" StrokeThickness="1"
                                                   StrokeDashArray="1 2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="White" />
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="White" />
                <Setter Property="Fill" TargetName="optionMark" Value="Black" />
                <Setter Property="Fill" TargetName="indeterminateMark" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent" />
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="White" />
                <Setter Property="Fill" TargetName="optionMark" Value="White" />
                <Setter Property="Fill" TargetName="indeterminateMark" Value="White" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>